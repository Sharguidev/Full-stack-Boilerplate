---
import DeleteModal from "./modals/DeleteModal.tsx";
import EditModal from "./modals/EditModal.tsx";


interface Contact {
  id?: string;
  name: string;
  last_name?: string;
  email?: string;
  phone?: string;
  address?: string;
}

const response = await fetch("http://localhost:3000/contact");
const contacts : Contact[] = await response.json();



---

<div class="card-container">
  {contacts.length === 0 ? (
    <div class="no-contacts">No contacts found. Add your first contact!</div>
  ) : (
    contacts.map(contact => (
      <div class="card">
        <div class="content-card">
          <div class="img">
            <img 
              src="https://i.pravatar.cc/300" 
              class="avatar" 
              alt={contact.name} 
              width="200"
              height="200"
            />
          </div>
          <div class="body">
            <p class="card-text">{contact.name} {contact.last_name || ''}</p>
            <p class="card-text">{contact.email || 'No email'}</p>
            <p class="card-text">{contact.phone || 'No phone'}</p>
            <p class="card-text">{contact.address || 'No address'}</p>
          </div>
          <div class="action-btns">
            <DeleteModal 
              client:load
              contactId={contact.id!} 
              onDelete={(deletedId) => {
    // Remove the deleted contact from the contacts array
              // contacts = contacts.filter(c => c.id !== deletedId);
  }} 
            />
            <EditModal client:load />
          </div>
        </div>
      </div>
    ))
  )}
</div>

<style>
  .card-container {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin-top: 1rem;
  }
  
  .card {
    width: 100%;
    min-height: 200px;
    border: 1px solid #070606;
    border-radius: 10px;
    overflow: hidden;
    display: flex;
    transition: transform 0.2s, box-shadow 0.2s;
  }
  
  .card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
  }
  
  .content-card {
    display: flex;
    flex-direction: row;
    gap: 1rem;
    width: 100%;
    padding: 1rem;
  }
  
  .img {
    width: 200px;
    height: 196px;
    flex-shrink: 0;
  }
  
  .avatar {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 8px;
  }
  
  .body {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .card-text {
    margin: 0;
    line-height: 1.4;
  }
  
  .action-btns {
    display: flex;
    gap: 0.5rem;
    margin-left: auto;
    align-self: flex-start;
  }
  
  .no-contacts {
    padding: 1rem;
    text-align: center;
    color: #5c5353;
  }
</style>